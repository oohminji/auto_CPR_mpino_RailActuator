/*

2024년 5월 30일자 수정본

할일
모터 구동						O
버튼 동작						O
압력 센서 받기					X
심박 센서 받기					X
색인지 센서 빋기				X
색인지 위치까지 모터 구동		X
압력 센서 인식 시 모터 정지		X
정지 버튼 초기 위치로			X


* 빠진 거 있으면 추가 바람 *

*/

#include <Wire.h>

int Y_PUL = 7;
int Y_DIR = 8;
int X_PUL = 5;
int X_DIR = 6;
int STOPbtn = 3;
int SLEEPbtn = 2;
int microStep = 8; //스텝 and 펄스
int rotation = 12000; //회전수
int baudrate = 115200;
unsigned long int i;
volatile bool sleep = false;
volatile bool start = false;
volatile bool FSR = false;
void setup() {
	Wire.begin();
	Serial.begin( baudrate );
	pinMode( Y_PUL, OUTPUT );
	pinMode( Y_DIR, OUTPUT );
	pinMode( X_PUL, OUTPUT );
	pinMode( X_DIR, OUTPUT );
	pinMode( STOPbtn, INPUT_PULLUP );
	pinMode( SLEEPbtn, INPUT_PULLUP );
	delay( 0 );
	attachInterrupt( digitalPinToInterrupt( STOPbtn ), _STOP, FALLING ); 	// 정지버튼 눌렸을 때
	attachInterrupt( digitalPinToInterrupt( SLEEPbtn ), _SLEEP, FALLING );	// 대기버튼 눌렸을 때
}

// 정지버튼 동작코드
void _STOP()
{
	start = false;
	sleep = true;
	Serial.println( "btn detected" );
}

// 대기버튼 동작코드
void _SLEEP()
{
	sleep = !sleep;
	start = false;
	if ( sleep == false)
	{
		start = true;
		
	}
	
}
	

void loop()
{
	Wire.requestFrom( 8, 3 );
	
	if ( Wire.available() == 3 )
	{
		int btn_status = Wire.read();
		if ( btn_status == 1 )
		{
			start = true;
		}
	}
	while ( start == true )
	{
		//모터 반대 방향
		digitalWrite( Y_DIR, LOW );
		digitalWrite( X_DIR, HIGH );
		for ( i = 0; i < ( microStep * rotation ); i++ )
		{
			digitalWrite( Y_PUL, HIGH );
			delayMicroseconds( 10 ); //속도
			digitalWrite( Y_PUL, LOW );
			delayMicroseconds( 10 );
			digitalWrite( X_PUL, HIGH );
			delayMicroseconds( 10 );
			digitalWrite( X_PUL, LOW );
			delayMicroseconds( 10 );
			attachInterrupt( digitalPinToInterrupt( STOPbtn ), _STOP, FALLING );
			attachInterrupt( digitalPinToInterrupt( SLEEPbtn ), _SLEEP, FALLING );
		}
		delay( 500 );

		//모터 방향
		digitalWrite( Y_DIR, HIGH );
		digitalWrite( X_DIR, LOW );
		for ( i = 0; i < ( microStep * rotation ); i++ )
		{
			digitalWrite( Y_PUL, HIGH );
			delayMicroseconds( 1 );
			digitalWrite( Y_PUL, LOW );
			delayMicroseconds( 1 );
			digitalWrite( X_PUL, HIGH );
			delayMicroseconds( 10 );
			digitalWrite( X_PUL, LOW );
			delayMicroseconds( 10 );
			attachInterrupt( digitalPinToInterrupt( STOPbtn ), _STOP, FALLING );
			attachInterrupt( digitalPinToInterrupt( SLEEPbtn ), _SLEEP, FALLING );
		}
		delay( 500 );
	}
}